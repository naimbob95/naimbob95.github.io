---
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Separator } from "@/components/ui/separator"
import { Github, Linkedin } from "lucide-react"
import ProfileImage from "../assets/profile.jpg"
import { Image } from 'astro:assets';
import { buttonVariants } from "@/components/ui/button"
import About from "@/components/sections/About.astro"
import Experience from "@/components/sections/Experience.astro"
import Education from "@/components/sections/Education.astro"
import Skill from "@/components/sections/Skill.astro"
import Certificate from "@/components/sections/Certificate.astro"
---

<div class="container px-4 py-2 mx-auto max-w-6xl">
    <header class="fixed top-0 left-0 right-0 z-50 border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
        <nav class="container flex items-center justify-center px-4 py-3 mx-auto max-w-6xl overflow-x-auto">
            <div class="flex items-center gap-6 md:gap-12">
                {["about", "experience", "education", "skills"].map((item) => (
                    <Button 
                        variant="ghost" 
                        size="sm" 
                        asChild 
                        className="hover:bg-muted hover:text-accent transition-colors duration-200 min-w-fit"
                    >
                        <a href={`#${item}`} class="text-xs md:text-sm font-medium tracking-wide uppercase whitespace-nowrap">
                            {item}
                        </a>
                    </Button>
                ))}
            </div>
        </nav>
    </header>

    <main class="pt-14">
        <About />
        <Experience />
        <Education />
        <Skill />
        <Certificate />
    </main>
</div>

<script>
    const observerCallback = (entries: IntersectionObserverEntry[]) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-timeline-item');
            }
        });
    };

    const observer = new IntersectionObserver(observerCallback, {
        threshold: 0.1
    });

    document.querySelectorAll('.timeline-item').forEach((item) => {
        observer.observe(item);
    });
</script>

